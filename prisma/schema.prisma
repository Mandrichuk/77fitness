// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Email {
  id    Int      @id @default(autoincrement())
  email String   @unique
  date  DateTime @default(now())
}

model Product {
  id            Int                @id @default(autoincrement())
  sku           String             @unique
  name          String
  categoryId    Int
  description   ProductDescription @relation(fields: [descriptionId], references: [id])
  images        ProductImage[]
  newPrice      Float
  oldPrice      Float
  createdAt     DateTime           @default(now())
  toDisplay     Boolean            @default(true)
  leftInStock   Int
  descriptionId Int
  OrderProduct  OrderProduct[]
}

model ProductDescription {
  id      Int       @id @default(autoincrement())
  en      String
  ru      String
  sk      String
  product Product[]
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String
  productId Int
  product   Product @relation(fields: [productId], references: [id])
}

model Category {
  id               Int            @id @default(autoincrement())
  sku              String         @unique
  name             String
  bgText           CategoryBgText @relation(fields: [categoryBgTextId], references: [id])
  title            CategoryTitle  @relation(fields: [categoryTitleId], references: [id])
  recomended       Boolean
  toDisplay        Boolean        @default(true)
  categoryBgTextId Int
  categoryTitleId  Int
}

model CategoryBgText {
  id       Int        @id @default(autoincrement())
  en       String
  ru       String
  sk       String
  category Category[]
}

model CategoryTitle {
  id       Int        @id @default(autoincrement())
  en       String
  ru       String
  sk       String
  category Category[]
}

model Client {
  id               Int      @id @default(autoincrement())
  sku              String   @unique
  username         String
  email            String   @unique
  password         String
  registrationDate DateTime @default(now())
  lastLoginDate    DateTime @default(now())
}

model Order {
  id            Int            @id @default(autoincrement())
  sku           String         @unique
  clientSku     String
  products      OrderProduct[]
  orderedDate   DateTime       @default(now())
  completedDate DateTime?
  isDone        Boolean        @default(false)
}

model OrderProduct {
  id         Int     @id @default(autoincrement())
  order      Order   @relation(fields: [orderId], references: [id])
  orderId    Int
  product    Product @relation(fields: [productSku], references: [sku])
  productSku String
  quantity   Int

  @@unique([orderId, productSku])
}

model Admin {
  id               Int      @id @default(autoincrement())
  sku              String   @unique
  username         String
  password         String
  registrationDate DateTime @default(now())
  lastLoginDate    DateTime @default(now())
  fullAccess       Boolean  @default(false)
}
